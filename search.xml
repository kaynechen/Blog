<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[ASP.NET Core 开发微信管理平台（1）：环境搭建]]></title>
      <url>2016%2F11%2F21%2FASP.NET%20Core%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%2F</url>
      <content type="text"><![CDATA[1. 前言.NET Core 发布已经有一段时间了,现在已经是 1.1 的版本了。作为 C# 程序员，要跟上微软的步伐。我是想以项目实战的方式学习，这样可以发现更多的实际使用问题，如果只是写写 Demo 比价难发现。 学以实践，从这篇博文开始，使用 ASP.NET Core 开发微信管理平台，顺便也学习一下微信开发。 2. 开发环境2.1 开发环境.NET Core SDK [下载地址] 根据自己的电脑平台下载安装。Windows 用户如果装了 Visual Studio 2015，更新到 Update3 不用单独装 SDK。 Node.js [下载地址] Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。 简单的说 Node.js 就是运行在服务端的 JavaScript。 Yoman 12$ npm install -g yo$ npm install -g generator-aspnet Yoman 脚手架工具。通过 Yoman 生成 ASP.NET Core 项目结构和添加 ASP.NET Core 文件。 Bower 1$ npm install -g bower Bower资源包管理工具，通过 Bower 管理 jQuery、Bootstsrap 等前端资源。 2.2 开发工具Visual Studio Code[下载地址] Visual Studio Code 针对于编写现代 Web 和云应用的跨平台源代码编辑器。支持 Mac OS X、Windows 和 Linux。 SQLite SQLite 是跨平台的轻型数据库，无需安装和管理配置，以文件形式存储。而且 EntityFrameworkCore 也支持 SQLite。 3. 项目创建使用 Yoman 创建 ASP.NET Core 项目 1$ yo aspnet 为了更好的了解ASP.NET Core，我选择 Empty Web Application 项目已经创建完成。 接下来我们运行项目试试，Yoman 生成项目后下面有提示。 123$ dotnet restore //还原引用包$ dotnet build //生成项目（这一步可以省略，run 的时候会先执行 build）$ dotnet run //运行项目 在浏览器里输入：http://localhost:5000 。Hello World! 项目运行成功。 4. 前端框架界面使用基于 Bootstrap 的 AdminLTE 响应式模版，内置登录、注册、锁屏、404错误、500错误页面等，而且是开源免费的。 使用 Bower 管理前端资源包，我们先通过 Yoman 添加 Bower 文件 1234$ yo aspnet:bowerjson$ bower install jquery$ bower install bootstrap$ bower install admin-lte 接下来我们用 Visual Studio Code 打开项目，打开文件的时候，VS Code 会根据文件类型给出安装扩展的建议，很方便。 但是添加 ASP.NET Core 项就没那么方便了，如：Controller、View、Class、Interface等，需要自己手写。但使用 Yoman 可以很方便的创建。使用 Yoman 创建一个 Controller 和 View。 12$ yo aspnet:mvccontroller AccountController$ yo aspnet:mvcview Login 把 AdminLTE 的登录页面的代码拷贝到 Login.cshtml。使用 Bower 添加 Font-Awesome、iCheck 资源。修改 js、css 引用路径。 12$ bower install font-awesome$ bower install icheck 登录界面与前端资源都准备好了，下面在 project.json 里添加 mvc 包引用。 12345678910111213141516"dependencies": &#123;"Microsoft.NETCore.App": &#123; "version": "1.0.1", "type": "platform"&#125;,"Microsoft.AspNetCore.Diagnostics": "1.0.0","Microsoft.AspNetCore.Server.IISIntegration": "1.0.0","Microsoft.AspNetCore.Server.Kestrel": "1.0.1","Microsoft.Extensions.Logging.Console": "1.0.0","Microsoft.Extensions.Configuration.EnvironmentVariables": "1.0.0","Microsoft.Extensions.Configuration.FileExtensions": "1.0.0","Microsoft.Extensions.Configuration.Json": "1.0.0","Microsoft.Extensions.Configuration.CommandLine": "1.0.0","Microsoft.AspNetCore.Mvc": "1.1.0"&#125; 接下来我们在 Startup.cs 中添加 Mvc 服务和配置路由。Startup 有两个方法：ConfigureServices、Configure，ConfigureServices：配置我们应用程序中的各种服务；Configure：用于处理我们程序中的各种中间件（middleware）。路由是以中间件的方式配置的。详见：ASP.NET Core 介绍和项目解读。 1234567891011121314151617181920212223242526272829public class Startup&#123; public void ConfigureServices(IServiceCollection services) &#123; services.AddMvc(); &#125; public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) &#123; loggerFactory.AddConsole(); if (env.IsDevelopment()) &#123; app.UseDeveloperExceptionPage(); &#125; // app.Run(async (context) =&gt; // &#123; // await context.Response.WriteAsync(&quot;Hello World!&quot;); // &#125;); app.UseMvc(routes =&gt; &#123; routes.MapRoute( name: &quot;default&quot;, template: &quot;&#123;controller=Account&#125;/&#123;action=Login&#125;/&#123;id?&#125;&quot; ); &#125;); &#125;&#125; OK，路由也配好了，我们使用 $ dotnet run 运行看看。 为什么js、css都是404？因为没有添加静态文件的中间件（middleware），先在 project.json 中添加包的引用： 1"Microsoft.AspNetCore.StaticFiles": "1.0.0" 再在路由上面添加： app.UseStaticFiles(); 再运行项目就没问题了 5. 终结这篇文章只是简单讲解 ASP.NET Core 项目的创建。但需要了解前端一些知识，如：node.js、Yoman、Bower。还有 ASP.NET Core 的一些配置，以及中间件（middleware）的概念。 我也是边学边做，写的不对、不好的地方，大家给我留言或加 QQ群（558360458 ）互相探讨与学习。源码我会放在 GitHub 和群共享。 本文版权归作者所有有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[开篇博客]]></title>
      <url>2016%2F11%2F07%2F%E5%BC%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[1. 前言工作六年多了，一直想写博客，由于种种原因没有开篇，我想最主要是自己没有那份恒心。万事开头难，既然开头了，希望自己能坚持写下去。 2. 写作能力语文成绩一直很差，所以文笔不好，希望通过写博客来提高自己的文笔。每一篇博文先做到自己先阅读，再词语推敲，最后与大家分享。写得不好还请大家见谅！ 3. 知识积累工作这么多年，不断的学习新的技术，但为了适应项目，所学的知识也是零零碎碎。有些底层的东西还不够了解，只会用但不理解原理。写博客也是为了系统化的学习，以某一个知识点或一个系列来写，以便巩固基础。 4. 交流学习 俗话说：三人行必有我师！ 每个人都有自己的优缺点，通过博客与更多人交流、探讨、互相学习。]]></content>
    </entry>

    
  
  
</search>
